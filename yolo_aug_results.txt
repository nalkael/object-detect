========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.8662
F1 @ 75:     0.8096
F1 @ thresh: [    0.86619     0.86196     0.86196     0.85312     0.84038     0.80956     0.74996     0.64236      0.4166     0.10287]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [      0.675       0.675       0.675        0.65        0.65         0.6         0.5         0.4       0.225           0]
  1: [    0.94805     0.94805     0.94805     0.94805     0.92208     0.90909     0.85065     0.75974      0.5974     0.21429]
  2: [    0.94737     0.94737     0.94737     0.92982     0.92982     0.87719     0.82456     0.68421     0.34211     0.04386]
  3: [    0.88372     0.88372     0.88372     0.88372     0.88372     0.88372     0.83721     0.69767     0.51163    0.093023]
  4: [    0.88679     0.84906     0.84906     0.83019     0.79245     0.75472     0.69811     0.62264     0.45283     0.11321]
  5: [    0.68027     0.68027     0.68027     0.68027     0.68027     0.65306     0.59864      0.4898     0.23129    0.027211]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.7388
  F1 @ 75:     0.7012
  F1 @ thresh: [    0.73882     0.73882     0.73882     0.73331     0.73331     0.70118     0.63144     0.50882     0.25474    0.020753]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.68354     0.68354     0.68354     0.65823     0.65823     0.60759     0.50633     0.40506     0.22785           0]
    1: [    0.77778     0.77778     0.77778     0.77778     0.77778     0.77778     0.66667     0.44444     0.33333           0]
    2: [    0.77778     0.77778     0.77778     0.77778     0.77778     0.73333     0.66667     0.53333     0.17778           0]
    3: [    0.88372     0.88372     0.88372     0.88372     0.88372     0.88372     0.83721     0.69767     0.51163    0.093023]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.69444     0.69444     0.69444     0.69444     0.69444     0.66667     0.61111         0.5     0.23611    0.027778]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.9320
  F1 @ 75:     0.8740
  F1 @ thresh: [    0.93195      0.9243      0.9243     0.91651     0.89339     0.87404     0.82755     0.74204     0.55514      0.1704]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.95833     0.95833     0.95833     0.95833     0.93056     0.91667     0.86806     0.78472     0.61806     0.22917]
    2: [    0.90476     0.90476     0.90476     0.88889     0.88889     0.87302     0.84127     0.74603     0.49206    0.079365]
    4: [    0.89109     0.85149     0.85149     0.83168     0.79208     0.75248     0.69307     0.61386     0.45545     0.11881]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.6667
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8237
R @ 75:     0.7697
R @ thresh: [    0.82365      0.8195      0.8195      0.8112     0.79876     0.76971     0.71369     0.61203     0.39834    0.099585]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.57447     0.57447     0.57447     0.55319     0.55319     0.51064     0.42553     0.34043     0.19149           0]
  1: [    0.92405     0.92405     0.92405     0.92405     0.89873     0.88608     0.82911     0.74051     0.58228     0.20886]
  2: [    0.91525     0.91525     0.91525     0.89831     0.89831     0.84746     0.79661     0.66102     0.33051    0.042373]
  3: [    0.79167     0.79167     0.79167     0.79167     0.79167     0.79167        0.75       0.625     0.45833    0.083333]
  4: [    0.87037     0.83333     0.83333     0.81481     0.77778     0.74074     0.68519     0.61111     0.44444     0.11111]
  5: [    0.61728     0.61728     0.61728     0.61728     0.61728     0.59259     0.54321     0.44444     0.20988    0.024691]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6435
  R @ 75:     0.6111
  R @ thresh: [    0.64352     0.64352     0.64352     0.63889     0.63889     0.61111     0.55093     0.44444     0.22222    0.018519]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.57447     0.57447     0.57447     0.55319     0.55319     0.51064     0.42553     0.34043     0.19149           0]
    1: [    0.63636     0.63636     0.63636     0.63636     0.63636     0.63636     0.54545     0.36364     0.27273           0]
    2: [    0.67308     0.67308     0.67308     0.67308     0.67308     0.63462     0.57692     0.46154     0.15385           0]
    3: [    0.79167     0.79167     0.79167     0.79167     0.79167     0.79167        0.75       0.625     0.45833    0.083333]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.61728     0.61728     0.61728     0.61728     0.61728     0.59259     0.54321     0.44444     0.20988    0.024691]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.9091
  R @ 75:     0.8523
  R @ thresh: [    0.90909     0.90152     0.90152     0.89394     0.87121     0.85227     0.80682     0.72348     0.54167     0.16667]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.93878     0.93878     0.93878     0.93878     0.91156     0.89796     0.85034     0.76871     0.60544     0.22449]
    2: [    0.86364     0.86364     0.86364     0.84848     0.84848     0.83333     0.80303     0.71212      0.4697    0.075758]
    4: [    0.88235     0.84314     0.84314     0.82353     0.78431      0.7451     0.68627     0.60784     0.45098     0.11765]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.5000
  R @ thresh: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.9176
P @ 75:     0.8576
P @ thresh: [    0.91757     0.91326     0.91326      0.9037     0.89065     0.85761      0.7935     0.67863     0.43826      0.1065]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.81818     0.81818     0.81818     0.78788     0.78788     0.72727     0.60606     0.48485     0.27273           0]
  1: [    0.97333     0.97333     0.97333     0.97333     0.94667     0.93333     0.87333        0.78     0.61333        0.22]
  2: [    0.98182     0.98182     0.98182     0.96364     0.96364     0.90909     0.85455     0.70909     0.35455    0.045455]
  3: [          1           1           1           1           1           1     0.94737     0.78947     0.57895     0.10526]
  4: [    0.90385     0.86538     0.86538     0.84615     0.80769     0.76923     0.71154     0.63462     0.46154     0.11538]
  5: [    0.75758     0.75758     0.75758     0.75758     0.75758     0.72727     0.66667     0.54545     0.25758    0.030303]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8696
  P @ 75:     0.8246
  P @ thresh: [    0.86961     0.86961     0.86961     0.86281     0.86281     0.82464      0.7415     0.59658     0.29922    0.023601]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.84375     0.84375     0.84375      0.8125      0.8125        0.75       0.625         0.5     0.28125           0]
    1: [          1           1           1           1           1           1     0.85714     0.57143     0.42857           0]
    2: [    0.92105     0.92105     0.92105     0.92105     0.92105     0.86842     0.78947     0.63158     0.21053           0]
    3: [          1           1           1           1           1           1     0.94737     0.78947     0.57895     0.10526]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.79365     0.79365     0.79365     0.79365     0.79365      0.7619     0.69841     0.57143     0.26984    0.031746]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9563
  P @ 75:     0.8973
  P @ thresh: [    0.95633     0.94861     0.94861     0.94058     0.91705     0.89726     0.84969     0.76185      0.5695     0.17433]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.97872     0.97872     0.97872     0.97872     0.95035     0.93617     0.88652     0.80142     0.63121     0.23404]
    2: [       0.95        0.95        0.95     0.93333     0.93333     0.91667     0.88333     0.78333     0.51667    0.083333]
    4: [        0.9        0.86        0.86        0.84         0.8        0.76         0.7        0.62        0.46        0.12]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     1.0000
  P @ thresh: [          1           1           1           1           1           1           1           1           1           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           1           1           1           1           1           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5737
mAP @ 50:    0.7614
mAP @ 75:    0.6855
mAP scores: [    0.76145     0.75347     0.75347     0.73989     0.72639     0.68548     0.59751     0.45859     0.24003    0.020899]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.54397     0.54397     0.54397      0.5033      0.5033     0.41309     0.31286     0.25829    0.063925           0]
  1: [    0.91386     0.91386     0.91386     0.91386     0.87404      0.8631     0.78642     0.67909     0.50183    0.068881]
  2: [    0.90045     0.90045     0.90045     0.87855     0.87855     0.81684     0.74661     0.54134     0.16595   0.0034702]
  3: [    0.79208     0.79208     0.79208     0.79208     0.79208     0.79208     0.72992      0.5258     0.34399    0.007414]
  4: [    0.84393     0.79605     0.79605     0.77716       0.736      0.6811      0.5804     0.47826      0.3078     0.04455]
  5: [    0.57439     0.57439     0.57439     0.57439     0.57439     0.54671     0.42886     0.26874    0.056663   0.0010775]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.5298
  mAP @ 50:    0.6983
  mAP @ 75:    0.6646
  mAP scores: [    0.69834     0.69834     0.69834     0.69153     0.69153     0.66455     0.59154     0.44374      0.1186   0.0014225]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.54786     0.54786     0.54786     0.50702     0.50702     0.41647     0.31523     0.25917    0.064404           0]
    1: [    0.63366     0.63366     0.63366     0.63366     0.63366     0.63366     0.54455     0.25065     0.18349           0]
    2: [     0.6245      0.6245      0.6245      0.6245      0.6245     0.58177     0.51688     0.34842    0.060932           0]
    3: [    0.79208     0.79208     0.79208     0.79208     0.79208     0.79208     0.72992      0.5258     0.34399    0.007414]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.59194     0.59194     0.59194     0.59194     0.59194     0.56334     0.44268      0.2784     0.05879   0.0011212]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6788
  mAP @ 50:    0.8764
  mAP @ 75:    0.7931
  mAP scores: [    0.87642     0.86037     0.86037     0.84795     0.82413     0.79306     0.72292     0.59489     0.36574     0.04235]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.93048     0.93048     0.93048     0.93048      0.9002     0.88024     0.82124     0.70507     0.52639    0.075596]
    2: [    0.84499     0.84499     0.84499     0.82618     0.82618      0.8163     0.76708     0.60862     0.25778   0.0068013]
    4: [     0.8538     0.80565     0.80565     0.78718     0.74602     0.68262     0.58044     0.47098     0.31305    0.044654]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.4545
  mAP @ 50:    0.5050
  mAP @ 75:    0.5050
  mAP scores: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  
