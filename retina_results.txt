========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.3627
F1 @ 75:     0.3228
F1 @ thresh: [     0.3627     0.36162     0.35595     0.35173     0.34402     0.32279     0.29058     0.24187     0.15603    0.032754]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.18232     0.18232     0.17127     0.16022     0.14917     0.10497    0.071823    0.049724    0.016575           0]
  1: [    0.62069     0.62069     0.62069     0.62069     0.61258     0.58418     0.54361     0.48276     0.34483    0.085193]
  2: [    0.31092     0.30812     0.30532     0.29412     0.28852     0.27451      0.2521     0.17647    0.081232    0.011204]
  3: [    0.16406     0.15625     0.14844     0.14844     0.13281     0.13281     0.13281     0.11719    0.046875   0.0078125]
  4: [    0.29651     0.29651     0.27907     0.27907     0.27326     0.26744     0.23256      0.2093     0.15698    0.011628]
  5: [    0.14252     0.14252     0.13318     0.13084     0.12383      0.1028    0.065421    0.037383   0.0093458   0.0023364]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.2327
  F1 @ 75:     0.1722
  F1 @ thresh: [     0.2327     0.23129     0.22076      0.2141     0.20233     0.17217     0.13317    0.091183    0.034095   0.0028136]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.26506     0.26506       0.249     0.23293     0.21687     0.15261     0.10442    0.072289    0.024096           0]
    1: [    0.17073     0.17073     0.17073     0.17073     0.14634     0.14634    0.097561    0.073171     0.04878           0]
    2: [    0.21168     0.21168     0.21168     0.20438     0.20438     0.18978     0.17518     0.11679    0.051095           0]
    3: [    0.26582     0.25316     0.24051     0.24051     0.21519     0.21519     0.21519     0.18987    0.075949    0.012658]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.22889     0.22889     0.21388     0.21013     0.19887      0.1651     0.10507    0.060038    0.015009   0.0037523]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.7236
  F1 @ 75:     0.6851
  F1 @ thresh: [    0.72357     0.72357     0.71768     0.71768     0.70983     0.68514     0.63417     0.55109     0.37867    0.082686]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.85131     0.85131     0.85131     0.85131     0.84548     0.80466     0.75802     0.67638     0.48397     0.12245]
    2: [    0.61376     0.61376     0.61376     0.61376     0.60317     0.60317     0.55026     0.42328      0.2328    0.042328]
    4: [    0.49746     0.49746     0.46701     0.46701     0.45685      0.4467     0.38579     0.35533     0.26396    0.020305]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.6667
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8921
R @ 75:     0.7635
R @ thresh: [    0.89212     0.88797     0.86515     0.85062     0.82573     0.76349     0.66805     0.53527      0.3195    0.060166]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.70213     0.70213     0.65957     0.61702     0.57447     0.40426      0.2766     0.19149     0.06383           0]
  1: [    0.96835     0.96835     0.96835     0.96835      0.9557     0.91139      0.8481     0.75316     0.53797     0.13291]
  2: [    0.94068      0.9322     0.92373     0.88983     0.87288     0.83051     0.76271      0.5339     0.24576    0.033898]
  3: [      0.875     0.83333     0.79167     0.79167     0.70833     0.70833     0.70833       0.625        0.25    0.041667]
  4: [    0.94444     0.94444     0.88889     0.88889     0.87037     0.85185     0.74074     0.66667         0.5    0.037037]
  5: [    0.75309     0.75309      0.7037     0.69136     0.65432     0.54321     0.34568     0.19753    0.049383    0.012346]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6991
  R @ 75:     0.5185
  R @ thresh: [    0.69907     0.69444     0.66204     0.64352     0.60648     0.51852     0.39815     0.27315     0.10185   0.0092593]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.70213     0.70213     0.65957     0.61702     0.57447     0.40426      0.2766     0.19149     0.06383           0]
    1: [    0.63636     0.63636     0.63636     0.63636     0.54545     0.54545     0.36364     0.27273     0.18182           0]
    2: [    0.55769     0.55769     0.55769     0.53846     0.53846         0.5     0.46154     0.30769     0.13462           0]
    3: [      0.875     0.83333     0.79167     0.79167     0.70833     0.70833     0.70833       0.625        0.25    0.041667]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.75309     0.75309      0.7037     0.69136     0.65432     0.54321     0.34568     0.19753    0.049383    0.012346]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.9583
  R @ 75:     0.9053
  R @ thresh: [    0.95833     0.95833     0.94697     0.94697     0.93561      0.9053     0.83333     0.72348     0.49621     0.10227]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [     0.9932      0.9932      0.9932      0.9932     0.98639     0.93878     0.88435     0.78912     0.56463     0.14286]
    2: [    0.87879     0.87879     0.87879     0.87879     0.86364     0.86364     0.78788     0.60606     0.33333    0.060606]
    4: [    0.96078     0.96078     0.90196     0.90196     0.88235     0.86275      0.7451     0.68627      0.5098    0.039216]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.5000
  R @ thresh: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.2430
P @ 75:     0.2180
P @ thresh: [    0.24296     0.24233     0.23906     0.23658     0.23172       0.218     0.19729      0.1657      0.1086    0.023396]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.10476     0.10476    0.098413    0.092063    0.085714    0.060317     0.04127    0.028571   0.0095238           0]
  1: [    0.45672     0.45672     0.45672     0.45672     0.45075     0.42985         0.4     0.35522     0.25373    0.062687]
  2: [    0.18624     0.18456     0.18289     0.17617     0.17282     0.16443     0.15101      0.1057    0.048658   0.0067114]
  3: [   0.090517    0.086207    0.081897    0.081897    0.073276    0.073276    0.073276    0.064655    0.025862   0.0043103]
  4: [    0.17586     0.17586     0.16552     0.16552     0.16207     0.15862     0.13793     0.12414    0.093103   0.0068966]
  5: [    0.07871     0.07871    0.073548    0.072258    0.068387    0.056774    0.036129    0.020645   0.0051613   0.0012903]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.1400
  P @ 75:     0.1036
  P @ thresh: [    0.14004     0.13921     0.13291     0.12884     0.12182     0.10357    0.080225    0.054909    0.020551   0.0016588]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.16337     0.16337     0.15347     0.14356     0.13366    0.094059    0.064356    0.044554    0.014851           0]
    1: [   0.098592    0.098592    0.098592    0.098592    0.084507    0.084507    0.056338    0.042254    0.028169           0]
    2: [    0.13063     0.13063     0.13063     0.12613     0.12613     0.11712     0.10811    0.072072    0.031532           0]
    3: [    0.15672     0.14925     0.14179     0.14179     0.12687     0.12687     0.12687     0.11194    0.044776   0.0074627]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.13496     0.13496     0.12611     0.12389     0.11726    0.097345    0.061947    0.035398   0.0088496   0.0022124]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.5975
  P @ 75:     0.5661
  P @ thresh: [    0.59749     0.59749     0.59352     0.59352     0.58733     0.56612     0.52529     0.45716     0.31491    0.070435]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [     0.7449      0.7449      0.7449      0.7449      0.7398     0.70408     0.66327     0.59184     0.42347     0.10714]
    2: [    0.47154     0.47154     0.47154     0.47154     0.46341     0.46341     0.42276      0.3252     0.17886     0.03252]
    4: [    0.33562     0.33562     0.31507     0.31507     0.30822     0.30137     0.26027     0.23973     0.17808    0.013699]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     1.0000
  P @ thresh: [          1           1           1           1           1           1           1           1           1           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           1           1           1           1           1           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.4859
mAP @ 50:    0.7053
mAP @ 75:    0.5465
mAP scores: [    0.70525     0.69385      0.6659      0.6548     0.61827     0.54651     0.45804     0.34043     0.16315    0.012335]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.39907     0.39907     0.35955     0.34476     0.33754     0.16278    0.062668    0.028053    0.004004           0]
  1: [    0.94745     0.94745     0.94745     0.94745     0.93165     0.86047     0.75354      0.6242     0.37389    0.035435]
  2: [    0.90533     0.88665     0.87261      0.8315     0.80915     0.76202     0.66942     0.39813    0.082685   0.0089093]
  3: [    0.68088     0.67157     0.63334     0.63334     0.51665     0.51665     0.51665     0.40579     0.19366   0.0037954]
  4: [     0.8838     0.84335     0.80182     0.80182     0.76134      0.7499     0.64659     0.54817     0.32321    0.025803]
  5: [    0.41498     0.41498     0.38061     0.36993      0.3533     0.22722    0.099351    0.038231   0.0014619   7.022e-05]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.2901
  mAP @ 50:    0.4441
  mAP @ 75:    0.3215
  mAP scores: [    0.44412     0.44183     0.42144     0.41247     0.38024     0.32154      0.2505      0.1638    0.064238  0.00064691]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.43401     0.43401       0.391     0.37137     0.36101     0.17302    0.068545    0.031286   0.0043847           0]
    1: [     0.5565      0.5565      0.5565      0.5565     0.51583     0.51583     0.36634     0.25354     0.14074           0]
    2: [    0.51464     0.51464     0.51464     0.49212     0.49212     0.46071      0.4257     0.23502    0.045059           0]
    3: [    0.71287     0.69911     0.65856     0.65856     0.53622     0.53622     0.53622     0.42261     0.19366   0.0037954]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.44671     0.44671     0.40792     0.39629     0.37627     0.24347     0.10617     0.04032   0.0015901  8.6096e-05]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6859
  mAP @ 50:    0.9103
  mAP @ 75:    0.8267
  mAP scores: [    0.91029     0.89677     0.88141     0.88141     0.85735     0.82666     0.72048     0.57319     0.28374    0.027608]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.98515     0.98515     0.98515     0.98515     0.96895      0.8899      0.7888     0.64874     0.39125     0.03803]
    2: [    0.83306     0.83306     0.83306     0.83306     0.82369     0.82369     0.71961     0.49309     0.12837    0.018992]
    4: [    0.91266     0.87211     0.82601     0.82601     0.77943     0.76638     0.65304     0.57773      0.3316    0.025803]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.4545
  mAP @ 50:    0.5050
  mAP @ 75:    0.5050
  mAP scores: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  
