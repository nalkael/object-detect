========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.6983
F1 @ 75:     0.6515
F1 @ thresh: [    0.69832     0.69047     0.69047     0.68612     0.66366     0.65147     0.59996     0.52568     0.34713     0.07047]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.25455     0.21818     0.21818     0.21818     0.21818     0.18182     0.14545     0.10909           0           0]
  1: [     0.9377     0.93115     0.93115     0.93115     0.90492     0.88525     0.81311      0.7541     0.60328      0.1377]
  2: [    0.90583     0.90583     0.90583     0.89686     0.86099     0.85202     0.78027     0.63677     0.29596    0.017937]
  3: [    0.58824     0.58824     0.58824     0.58824     0.52941     0.52941     0.47059     0.47059     0.35294     0.11765]
  4: [    0.78846     0.76923     0.76923        0.75     0.73077     0.73077     0.73077     0.65385     0.46154     0.13462]
  5: [    0.15909     0.15909     0.15909     0.15909     0.15909     0.15909     0.13636    0.090909    0.045455           0]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.3995
  F1 @ 75:     0.3664
  F1 @ thresh: [    0.39948     0.39156     0.39156     0.38622     0.37433     0.36642     0.33071     0.26194     0.12249    0.024787]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.25455     0.21818     0.21818     0.21818     0.21818     0.18182     0.14545     0.10909           0           0]
    1: [      0.625       0.625       0.625       0.625       0.625       0.625       0.375        0.25        0.25       0.125]
    2: [    0.77778     0.77778     0.77778     0.75556     0.73333     0.73333     0.73333     0.57778     0.22222    0.022222]
    3: [    0.58824     0.58824     0.58824     0.58824     0.52941     0.52941     0.47059     0.47059     0.35294     0.11765]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.15909     0.15909     0.15909     0.15909     0.15909     0.15909     0.13636    0.090909    0.045455           0]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.9047
  F1 @ 75:     0.8619
  F1 @ thresh: [     0.9047     0.89692     0.89692     0.89301     0.87359     0.86195     0.80244     0.72709     0.52505     0.10512]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.96167      0.9547      0.9547      0.9547     0.92683     0.90592     0.84321     0.78746     0.62718     0.13937]
    2: [    0.85246     0.85246     0.85246     0.85246     0.85246     0.85246      0.7541     0.63934     0.34426    0.016393]
    4: [    0.80808     0.78788     0.78788     0.76768     0.74747     0.74747     0.74747     0.66667     0.46465     0.12121]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.0000
  F1 @ 75:     0.0000
  F1 @ thresh: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.6411
R @ 75:     0.5996
R @ thresh: [    0.64108     0.63485     0.63485     0.63071     0.60996     0.59959     0.55394     0.48755     0.32573     0.06639]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.14894     0.12766     0.12766     0.12766     0.12766     0.10638    0.085106     0.06383           0           0]
  1: [    0.90506     0.89873     0.89873     0.89873     0.87342     0.85443     0.78481     0.72785     0.58228     0.13291]
  2: [    0.85593     0.85593     0.85593     0.84746     0.81356     0.80508     0.73729     0.60169     0.27966    0.016949]
  3: [    0.41667     0.41667     0.41667     0.41667       0.375       0.375     0.33333     0.33333        0.25    0.083333]
  4: [    0.75926     0.74074     0.74074     0.72222      0.7037      0.7037      0.7037     0.62963     0.44444     0.12963]
  5: [    0.08642     0.08642     0.08642     0.08642     0.08642     0.08642    0.074074    0.049383    0.024691           0]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.2963
  R @ 75:     0.2731
  R @ thresh: [     0.2963     0.29167     0.29167     0.28704     0.27778     0.27315        0.25     0.19907    0.092593    0.018519]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.14894     0.12766     0.12766     0.12766     0.12766     0.10638    0.085106     0.06383           0           0]
    1: [    0.45455     0.45455     0.45455     0.45455     0.45455     0.45455     0.27273     0.18182     0.18182    0.090909]
    2: [    0.67308     0.67308     0.67308     0.65385     0.63462     0.63462     0.63462         0.5     0.19231    0.019231]
    3: [    0.41667     0.41667     0.41667     0.41667       0.375       0.375     0.33333     0.33333        0.25    0.083333]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.08642     0.08642     0.08642     0.08642     0.08642     0.08642    0.074074    0.049383    0.024691           0]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.8712
  R @ 75:     0.8295
  R @ thresh: [    0.87121     0.86364     0.86364     0.85985     0.84091     0.82955     0.77273     0.70076     0.50758     0.10227]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.93878     0.93197     0.93197     0.93197     0.90476     0.88435     0.82313     0.76871     0.61224     0.13605]
    2: [    0.78788     0.78788     0.78788     0.78788     0.78788     0.78788     0.69697     0.59091     0.31818    0.015152]
    4: [    0.78431     0.76471     0.76471      0.7451     0.72549     0.72549     0.72549     0.64706     0.45098     0.11765]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.0000
  R @ 75:     0.0000
  R @ thresh: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.9494
P @ 75:     0.8815
P @ thresh: [     0.9494     0.93274     0.93274     0.92817      0.9027     0.88149     0.79713     0.67059     0.41376    0.077135]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [      0.875        0.75        0.75        0.75        0.75       0.625         0.5       0.375           0           0]
  1: [    0.97279     0.96599     0.96599     0.96599     0.93878     0.91837     0.84354     0.78231     0.62585     0.14286]
  2: [     0.9619      0.9619      0.9619     0.95238     0.91429     0.90476     0.82857     0.67619     0.31429    0.019048]
  3: [          1           1           1           1         0.9         0.9         0.8         0.8         0.6         0.2]
  4: [       0.82         0.8         0.8        0.78        0.76        0.76        0.76        0.68        0.48        0.14]
  5: [          1           1           1           1           1           1     0.85714     0.57143     0.28571           0]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9492
  P @ 75:     0.8710
  P @ thresh: [    0.94917     0.92197     0.92197     0.91563     0.89818     0.87099     0.75873     0.56986     0.25753    0.038743]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [      0.875        0.75        0.75        0.75        0.75       0.625         0.5       0.375           0           0]
    1: [          1           1           1           1           1           1         0.6         0.4         0.4         0.2]
    2: [    0.92105     0.92105     0.92105     0.89474     0.86842     0.86842     0.86842     0.68421     0.26316    0.026316]
    3: [          1           1           1           1         0.9         0.9         0.8         0.8         0.6         0.2]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [          1           1           1           1           1           1     0.85714     0.57143     0.28571           0]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9420
  P @ 75:     0.8981
  P @ thresh: [    0.94199     0.93399     0.93399     0.92996     0.91003      0.8981     0.83552     0.75635     0.54427     0.10816]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.98571     0.97857     0.97857     0.97857        0.95     0.92857     0.86429     0.80714     0.64286     0.14286]
    2: [    0.92857     0.92857     0.92857     0.92857     0.92857     0.92857     0.82143     0.69643       0.375    0.017857]
    4: [    0.83333      0.8125      0.8125     0.79167     0.77083     0.77083     0.77083      0.6875     0.47917       0.125]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.0000
  P @ 75:     0.0000
  P @ thresh: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.3826
mAP @ 50:    0.5087
mAP @ 75:    0.4493
mAP scores: [    0.50868     0.50129     0.50129      0.4936     0.46199     0.44926     0.39796     0.32725      0.1697    0.015448]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.13957     0.12015     0.12015     0.12015     0.12015    0.094337    0.039814    0.027805           0           0]
  1: [     0.8878     0.87461     0.87461     0.87461     0.83029     0.79039     0.71463     0.63527     0.46361    0.043653]
  2: [    0.83877     0.83877     0.83877     0.82088     0.74233     0.73166     0.62092     0.43882     0.13233   0.0001539]
  3: [    0.41584     0.41584     0.41584     0.41584     0.36764     0.36764     0.31215     0.31215     0.13052    0.016388]
  4: [    0.68099     0.66928     0.66928     0.64103     0.62244     0.62244     0.62244     0.50213     0.28017    0.032493]
  5: [   0.089109    0.089109    0.089109    0.089109    0.089109    0.089109    0.077793    0.047305    0.011551           0]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.2088
  mAP @ 50:    0.2876
  mAP @ 75:    0.2596
  mAP scores: [    0.28764      0.2844      0.2844     0.27723     0.26391     0.25961     0.20968     0.15505    0.059337   0.0068489]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.13957     0.12015     0.12015     0.12015     0.12015    0.094337    0.039814    0.027805           0           0]
    1: [    0.45545     0.45545     0.45545     0.45545     0.45545     0.45545     0.27723     0.15578     0.15578    0.024422]
    2: [    0.62586     0.62586     0.62586     0.58282      0.5511      0.5511      0.5511     0.38724    0.058178  0.00028289]
    3: [    0.41584     0.41584     0.41584     0.41584     0.36764     0.36764     0.31215     0.31215     0.13052    0.016388]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [   0.089109    0.089109    0.089109    0.089109    0.089109    0.089109    0.077793    0.047305    0.011551           0]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6117
  mAP @ 50:    0.7841
  mAP @ 75:    0.7279
  mAP scores: [    0.78414     0.77624     0.77624     0.76654     0.74209     0.72791     0.66091     0.54105     0.31742    0.024025]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [     0.9279     0.92424     0.92424     0.92424     0.86947     0.82692     0.75973     0.67848     0.49346    0.045798]
    2: [    0.72153     0.72153     0.72153     0.72153     0.72153     0.72153     0.58774     0.43353     0.17985  0.00061881]
    4: [    0.70299     0.68296     0.68296     0.65386     0.63527     0.63527     0.63527     0.51113     0.27895    0.025657]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.0000
  mAP @ 50:    0.0000
  mAP @ 75:    0.0000
  mAP scores: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
