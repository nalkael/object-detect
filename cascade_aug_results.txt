========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.8635
F1 @ 75:     0.7973
F1 @ thresh: [    0.86347      0.8593     0.85495     0.84889     0.83392     0.79727     0.70562     0.55706     0.33734     0.08666]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.72727     0.70455     0.70455     0.70455     0.70455     0.70455     0.59091     0.47727     0.13636    0.022727]
  1: [    0.94805     0.94805     0.94156     0.94156     0.93506     0.88961     0.81169     0.70779     0.55844     0.16234]
  2: [    0.93805     0.93805     0.93805      0.9292     0.89381     0.85841     0.76991     0.55752     0.24779    0.026549]
  3: [    0.88889     0.88889     0.88889     0.88889     0.88889     0.88889         0.8     0.62222     0.35556     0.13333]
  4: [    0.78261     0.76522     0.76522     0.73043     0.71304     0.69565     0.69565     0.57391         0.4     0.12174]
  5: [    0.71523     0.71523     0.70199     0.70199     0.68874     0.62252     0.45033     0.27815     0.10596     0.02649]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.7560
  F1 @ 75:     0.6927
  F1 @ thresh: [    0.75598     0.75098     0.74581     0.74581     0.73529     0.69273     0.56792     0.41312     0.16033    0.035512]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.73563     0.71264     0.71264     0.71264     0.71264     0.71264      0.5977     0.48276     0.13793    0.022989]
    1: [    0.70588     0.70588     0.70588     0.70588     0.70588     0.58824     0.35294     0.35294     0.23529           0]
    2: [    0.75556     0.75556     0.75556     0.75556     0.73333     0.68889     0.64444     0.46667     0.15556    0.022222]
    3: [    0.88889     0.88889     0.88889     0.88889     0.88889     0.88889         0.8     0.62222     0.35556     0.13333]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.74483     0.74483     0.73103     0.73103     0.71724     0.64828     0.46897     0.28966     0.11034    0.027586]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.9182
  F1 @ 75:     0.8691
  F1 @ thresh: [    0.91822     0.91458     0.91073     0.90344     0.89594     0.86906     0.79878     0.67193     0.47927     0.12614]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.96194     0.96194     0.95502     0.95502      0.9481     0.91349     0.84429     0.73356     0.58131     0.17301]
    2: [    0.88889     0.88889     0.88889     0.88889     0.88889     0.87302     0.74603      0.5873     0.30159    0.031746]
    4: [    0.83019     0.81132     0.81132     0.77358     0.75472     0.73585     0.73585     0.60377     0.41509     0.11321]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.6667
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8361
R @ 75:     0.7718
R @ thresh: [     0.8361     0.83195      0.8278     0.82158     0.80705     0.77178     0.68465     0.54149     0.32988    0.085062]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.68085     0.65957     0.65957     0.65957     0.65957     0.65957     0.55319     0.44681     0.12766    0.021277]
  1: [    0.92405     0.92405     0.91772     0.91772     0.91139     0.86709     0.79114     0.68987      0.5443     0.15823]
  2: [    0.89831     0.89831     0.89831     0.88983     0.85593     0.82203     0.73729      0.5339     0.23729    0.025424]
  3: [    0.83333     0.83333     0.83333     0.83333     0.83333     0.83333        0.75     0.58333     0.33333       0.125]
  4: [    0.83333     0.81481     0.81481     0.77778     0.75926     0.74074     0.74074     0.61111     0.42593     0.12963]
  5: [    0.66667     0.66667     0.65432     0.65432     0.64198     0.58025     0.41975     0.25926    0.098765    0.024691]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6759
  R @ 75:     0.6204
  R @ thresh: [    0.67593      0.6713     0.66667     0.66667     0.65741     0.62037     0.50926     0.37037     0.14352    0.032407]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.68085     0.65957     0.65957     0.65957     0.65957     0.65957     0.55319     0.44681     0.12766    0.021277]
    1: [    0.54545     0.54545     0.54545     0.54545     0.54545     0.45455     0.27273     0.27273     0.18182           0]
    2: [    0.65385     0.65385     0.65385     0.65385     0.63462     0.59615     0.55769     0.40385     0.13462    0.019231]
    3: [    0.83333     0.83333     0.83333     0.83333     0.83333     0.83333        0.75     0.58333     0.33333       0.125]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.66667     0.66667     0.65432     0.65432     0.64198     0.58025     0.41975     0.25926    0.098765    0.024691]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.9053
  R @ 75:     0.8561
  R @ thresh: [     0.9053     0.90152     0.89773     0.89015     0.88258     0.85606     0.78788     0.66288     0.47348       0.125]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.94558     0.94558     0.93878     0.93878     0.93197     0.89796     0.82993     0.72109     0.57143     0.17007]
    2: [    0.84848     0.84848     0.84848     0.84848     0.84848     0.83333     0.71212     0.56061     0.28788    0.030303]
    4: [    0.86275     0.84314     0.84314     0.80392     0.78431     0.76471     0.76471     0.62745     0.43137     0.11765]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.5000
  R @ thresh: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.8952
P @ 75:     0.8267
P @ thresh: [    0.89515     0.89094     0.88635     0.88041     0.86492     0.82672     0.72998     0.57517      0.3461    0.088583]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.78049      0.7561      0.7561      0.7561      0.7561      0.7561     0.63415      0.5122     0.14634     0.02439]
  1: [    0.97333     0.97333     0.96667     0.96667        0.96     0.91333     0.83333     0.72667     0.57333     0.16667]
  2: [    0.98148     0.98148     0.98148     0.97222     0.93519     0.89815     0.80556     0.58333     0.25926    0.027778]
  3: [    0.95238     0.95238     0.95238     0.95238     0.95238     0.95238     0.85714     0.66667     0.38095     0.14286]
  4: [     0.7377     0.72131     0.72131     0.68852     0.67213     0.65574     0.65574     0.54098     0.37705     0.11475]
  5: [    0.77143     0.77143     0.75714     0.75714     0.74286     0.67143     0.48571         0.3     0.11429    0.028571]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8626
  P @ 75:     0.7887
  P @ thresh: [    0.86263     0.85719     0.85133     0.85133     0.83913     0.78868     0.64508     0.46986     0.18316    0.039367]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [        0.8       0.775       0.775       0.775       0.775       0.775        0.65       0.525        0.15       0.025]
    1: [          1           1           1           1           1     0.83333         0.5         0.5     0.33333           0]
    2: [    0.89474     0.89474     0.89474     0.89474     0.86842     0.81579     0.76316     0.55263     0.18421    0.026316]
    3: [    0.95238     0.95238     0.95238     0.95238     0.95238     0.95238     0.85714     0.66667     0.38095     0.14286]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.84375     0.84375     0.82812     0.82812      0.8125     0.73438     0.53125     0.32812       0.125     0.03125]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9329
  P @ 75:     0.8838
  P @ thresh: [    0.93293     0.92942      0.9255     0.91847     0.91104     0.88376     0.81121     0.68222     0.48582     0.12744]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.97887     0.97887     0.97183     0.97183     0.96479     0.92958     0.85915     0.74648     0.59155     0.17606]
    2: [    0.93333     0.93333     0.93333     0.93333     0.93333     0.91667     0.78333     0.61667     0.31667    0.033333]
    4: [        0.8     0.78182     0.78182     0.74545     0.72727     0.70909     0.70909     0.58182         0.4     0.10909]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     1.0000
  P @ thresh: [          1           1           1           1           1           1           1           1           1           1]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           1           1           1           1           1           1]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5598
mAP @ 50:    0.7807
mAP @ 75:    0.6883
mAP scores: [    0.78074     0.76291     0.75755     0.74249     0.72375     0.68833     0.57257     0.38821     0.16172    0.019755]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [     0.6383     0.55751     0.55751     0.55751     0.55751     0.55751     0.45016     0.26633    0.021105  0.00045235]
  1: [    0.91853     0.91853     0.89921     0.89921     0.89561     0.82879     0.72404     0.57766     0.39858     0.05712]
  2: [    0.88464     0.88464     0.88464     0.87427     0.79611     0.76756     0.62408     0.33346    0.073017  0.00089609]
  3: [    0.83168     0.83168     0.83168     0.83168     0.83168     0.83168      0.7198     0.55425      0.2492    0.036859]
  4: [    0.81354     0.78733     0.78733     0.70736     0.68558     0.67346     0.67346     0.49042     0.21555    0.022328]
  5: [    0.59777     0.59777     0.58492     0.58492       0.576     0.47096     0.24386     0.10712    0.012857  0.00087471]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3812
  mAP @ 50:    0.5506
  mAP @ 75:    0.4859
  mAP scores: [     0.5506     0.53708      0.5348      0.5348     0.52789     0.48591     0.34269     0.23058    0.061436   0.0065411]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.64229     0.56114     0.56114     0.56114     0.56114     0.56114     0.45302     0.26857    0.021214  0.00046656]
    1: [    0.54455     0.54455     0.54455     0.54455     0.54455     0.43999     0.18349     0.18349    0.045337           0]
    2: [    0.64673     0.64673     0.64673     0.64673     0.61503     0.57977     0.43914     0.26185     0.03902   0.0009901]
    3: [    0.83168     0.83168     0.83168     0.83168     0.83168     0.83168      0.7198     0.55425      0.2492    0.036859]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.63837     0.63837     0.62467     0.62467     0.61492     0.50288     0.26067     0.11532    0.013838  0.00093086]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6353
  mAP @ 50:    0.8503
  mAP @ 75:    0.7698
  mAP scores: [    0.85032     0.84157     0.83508     0.80712     0.79834     0.76979     0.68129     0.48921     0.24974    0.030283]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.94024     0.94024     0.92078     0.92078     0.91717     0.86056     0.75617     0.61201     0.42254    0.069081]
    2: [     0.7682      0.7682      0.7682      0.7682      0.7682     0.75897     0.59785     0.35643     0.10775   0.0019194]
    4: [    0.84251     0.81627     0.81627     0.73238     0.70966     0.68983     0.68983     0.49918     0.21895    0.019847]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.5050
  mAP @ 50:    0.5050
  mAP @ 75:    0.5050
  mAP scores: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495]
  
