========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.8623
F1 @ 75:     0.8087
F1 @ thresh: [    0.86229     0.86229     0.85351     0.84682     0.83598     0.80872     0.74473     0.59673      0.3756     0.11398]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.65823     0.65823     0.63291     0.60759     0.58228     0.58228     0.53165     0.32911     0.10127    0.050633]
  1: [    0.94904     0.94904     0.94904     0.94904     0.94268     0.92357     0.88535     0.75796     0.58599     0.20382]
  2: [    0.94421     0.94421     0.92704     0.91845     0.90987     0.86695     0.75536     0.54077     0.26609    0.034335]
  3: [     0.7619      0.7619      0.7619      0.7619      0.7619      0.7619     0.71429     0.66667     0.38095    0.095238]
  4: [    0.90741     0.90741     0.90741     0.90741     0.88889     0.85185     0.81481     0.75926     0.64815     0.24074]
  5: [    0.69182     0.69182     0.67925     0.66667     0.65409     0.61635     0.54088     0.38994     0.10063    0.012579]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.7224
  F1 @ 75:     0.6670
  F1 @ thresh: [    0.72239     0.72239     0.70705     0.69674     0.68642     0.66698     0.60652     0.42891     0.18997    0.037044]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.65823     0.65823     0.63291     0.60759     0.58228     0.58228     0.53165     0.32911     0.10127    0.050633]
    1: [        0.7         0.7         0.7         0.7         0.7         0.7         0.7         0.6         0.2         0.1]
    2: [    0.77083     0.77083        0.75        0.75        0.75     0.72917     0.66667     0.39583     0.29167    0.020833]
    3: [        0.8         0.8         0.8         0.8         0.8         0.8        0.75         0.7         0.4         0.1]
    4: [          1           1           1           1           1           1           1           1           1           0]
    5: [    0.70513     0.70513     0.69231     0.67949     0.66667     0.62821     0.55128     0.39744     0.10256    0.012821]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.9292
  F1 @ 75:     0.8984
  F1 @ thresh: [    0.92917     0.92917     0.92917     0.92917     0.92154     0.89841     0.84763     0.72701      0.5311     0.18038]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.97241     0.97241     0.97241     0.97241     0.96552     0.94483     0.90345     0.77241     0.62069     0.21379]
    2: [    0.83871     0.83871     0.83871     0.83871     0.83871     0.82258     0.74194     0.59677     0.24194    0.048387]
    4: [    0.92157     0.92157     0.92157     0.92157     0.90196     0.86275     0.82353     0.76471     0.64706      0.2549]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.6667
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8402
R @ 75:     0.7884
R @ thresh: [    0.84025     0.84025     0.83195     0.82573     0.81535     0.78838     0.72614     0.58299     0.36929     0.11203]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.55319     0.55319     0.53191     0.51064     0.48936     0.48936     0.44681      0.2766    0.085106    0.042553]
  1: [    0.94304     0.94304     0.94304     0.94304     0.93671     0.91772     0.87975     0.75316     0.58228     0.20253]
  2: [     0.9322      0.9322     0.91525     0.90678     0.89831     0.85593     0.74576      0.5339     0.26271    0.033898]
  3: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667       0.625     0.58333     0.33333    0.083333]
  4: [    0.90741     0.90741     0.90741     0.90741     0.88889     0.85185     0.81481     0.75926     0.64815     0.24074]
  5: [    0.67901     0.67901     0.66667     0.65432     0.64198     0.60494     0.53086     0.38272    0.098765    0.012346]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6574
  R @ 75:     0.6065
  R @ thresh: [    0.65741     0.65741     0.64352     0.63426       0.625     0.60648     0.55093     0.38889      0.1713    0.032407]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.55319     0.55319     0.53191     0.51064     0.48936     0.48936     0.44681      0.2766    0.085106    0.042553]
    1: [    0.63636     0.63636     0.63636     0.63636     0.63636     0.63636     0.63636     0.54545     0.18182    0.090909]
    2: [    0.71154     0.71154     0.69231     0.69231     0.69231     0.67308     0.61538     0.36538     0.26923    0.019231]
    3: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667       0.625     0.58333     0.33333    0.083333]
    4: [          1           1           1           1           1           1           1           1           1           0]
    5: [    0.67901     0.67901     0.66667     0.65432     0.64198     0.60494     0.53086     0.38272    0.098765    0.012346]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.9091
  R @ 75:     0.8788
  R @ thresh: [    0.90909     0.90909     0.90909     0.90909     0.90152     0.87879     0.82955     0.71212     0.52273     0.17803]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.95918     0.95918     0.95918     0.95918     0.95238     0.93197     0.89116      0.7619     0.61224     0.21088]
    2: [    0.78788     0.78788     0.78788     0.78788     0.78788     0.77273     0.69697     0.56061     0.22727    0.045455]
    4: [    0.92157     0.92157     0.92157     0.92157     0.90196     0.86275     0.82353     0.76471     0.64706      0.2549]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.5000
  R @ thresh: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.8909
P @ 75:     0.8350
P @ thresh: [     0.8909      0.8909     0.88145     0.87411     0.86261     0.83505     0.76883     0.61436     0.38348     0.11651]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [     0.8125      0.8125     0.78125        0.75     0.71875     0.71875     0.65625     0.40625       0.125      0.0625]
  1: [    0.95513     0.95513     0.95513     0.95513     0.94872     0.92949     0.89103     0.76282     0.58974     0.20513]
  2: [    0.95652     0.95652     0.93913     0.93043     0.92174     0.87826     0.76522     0.54783     0.26957    0.034783]
  3: [    0.88889     0.88889     0.88889     0.88889     0.88889     0.88889     0.83333     0.77778     0.44444     0.11111]
  4: [    0.90741     0.90741     0.90741     0.90741     0.88889     0.85185     0.81481     0.75926     0.64815     0.24074]
  5: [    0.70513     0.70513     0.69231     0.67949     0.66667     0.62821     0.55128     0.39744     0.10256    0.012821]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8096
  P @ 75:     0.7482
  P @ thresh: [    0.80958     0.80958     0.79231     0.78051     0.76871     0.74824     0.68128     0.48316      0.2153    0.043618]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [     0.8125      0.8125     0.78125        0.75     0.71875     0.71875     0.65625     0.40625       0.125      0.0625]
    1: [    0.77778     0.77778     0.77778     0.77778     0.77778     0.77778     0.77778     0.66667     0.22222     0.11111]
    2: [    0.84091     0.84091     0.81818     0.81818     0.81818     0.79545     0.72727     0.43182     0.31818    0.022727]
    3: [          1           1           1           1           1           1      0.9375       0.875         0.5       0.125]
    4: [          1           1           1           1           1           1           1           1           1           0]
    5: [    0.73333     0.73333        0.72     0.70667     0.69333     0.65333     0.57333     0.41333     0.10667    0.013333]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9512
  P @ 75:     0.9199
  P @ thresh: [     0.9512      0.9512      0.9512      0.9512     0.94352     0.91995     0.86746     0.74332      0.5401     0.18288]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.98601     0.98601     0.98601     0.98601     0.97902     0.95804     0.91608     0.78322     0.62937     0.21678]
    2: [    0.89655     0.89655     0.89655     0.89655     0.89655     0.87931      0.7931     0.63793     0.25862    0.051724]
    4: [    0.92157     0.92157     0.92157     0.92157     0.90196     0.86275     0.82353     0.76471     0.64706      0.2549]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     1.0000
  P @ thresh: [          1           1           1           1           1           1           1           1           1           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           1           1           1           1           1           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5642
mAP @ 50:    0.7432
mAP @ 75:    0.6832
mAP scores: [    0.74316     0.74316     0.73561      0.7251      0.7105     0.68321     0.60684     0.45219     0.21422     0.02849]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [      0.525       0.525     0.50665     0.46354     0.43901     0.43901     0.35009     0.13412    0.011047   0.0037701]
  1: [    0.93662     0.93662     0.93662     0.93662     0.91886     0.87451     0.82118     0.66877     0.47347    0.092305]
  2: [    0.91489     0.91489     0.89553     0.88478     0.86738     0.81423     0.66626     0.43004    0.098715   0.0014359]
  3: [    0.63989     0.63989     0.63989     0.63989     0.63989     0.63989     0.59823     0.54755     0.19311    0.012808]
  4: [    0.81792     0.81792     0.81792     0.81792     0.79871      0.7653      0.7289      0.6147     0.47773    0.059912]
  5: [    0.62467     0.62467     0.61704     0.60788     0.59916     0.56628     0.47635     0.31794    0.031243  0.00070721]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.5349
  mAP @ 50:    0.6791
  mAP @ 75:    0.6488
  mAP scores: [    0.67906     0.67906     0.67174       0.663     0.65746     0.64877     0.59628     0.46861      0.2654    0.019527]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [      0.525       0.525     0.50665     0.46354     0.43901     0.43901     0.35009     0.13412    0.011047   0.0037701]
    1: [    0.58449     0.58449     0.58449     0.58449     0.58449     0.58449     0.58449     0.49843     0.14074     0.09901]
    2: [     0.6747      0.6747     0.65684     0.65684     0.65684      0.6381     0.54695     0.29781      0.2113  0.00047148]
    3: [    0.66337     0.66337     0.66337     0.66337     0.66337     0.66337     0.61856     0.56283     0.19808    0.013202]
    4: [          1           1           1           1           1           1           1           1           1           0]
    5: [    0.62682     0.62682     0.61908     0.60976     0.60106     0.56764     0.47759     0.31846    0.031243  0.00070721]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6698
  mAP @ 50:    0.8376
  mAP @ 75:    0.7950
  mAP scores: [    0.83759     0.83759     0.83759     0.83759     0.82834       0.795       0.734     0.58577     0.34909    0.055382]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.95036     0.95036     0.95036     0.95036     0.94198     0.89596     0.84293     0.68232     0.50076    0.098697]
    2: [    0.72785     0.72785     0.72785     0.72785     0.72785     0.71603     0.62195       0.454     0.07172    0.002854]
    4: [    0.83457     0.83457     0.83457     0.83457     0.81519     0.77299     0.73712     0.62098     0.47478    0.064594]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.4545
  mAP @ 50:    0.5050
  mAP @ 75:    0.5050
  mAP scores: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  
