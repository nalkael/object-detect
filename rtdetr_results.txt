========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.8342
F1 @ 75:     0.7609
F1 @ thresh: [     0.8342      0.8317     0.82952     0.82273     0.80298     0.76092       0.686     0.51093     0.31029    0.071678]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.66667     0.64103     0.64103     0.61538     0.58974     0.51282     0.35897     0.15385    0.025641           0]
  1: [    0.94534     0.94534     0.94534     0.93891     0.91961     0.89389     0.82315     0.71383     0.50161     0.17363]
  2: [    0.92444     0.92444     0.91556     0.91556     0.88889     0.80889     0.73778     0.45333     0.20444    0.035556]
  3: [    0.66667     0.66667     0.66667     0.66667     0.62222     0.62222     0.62222     0.53333     0.26667           0]
  4: [    0.82883     0.82883     0.82883     0.82883     0.82883     0.82883     0.79279     0.72072     0.55856    0.054054]
  5: [    0.63636     0.63636     0.63636     0.62338     0.61039     0.57143     0.48052     0.25974      0.1039           0]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6925
  F1 @ 75:     0.5888
  F1 @ thresh: [    0.69254     0.68689     0.68689     0.67022     0.64877     0.58884     0.48582     0.28922     0.11597           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.67532     0.64935     0.64935     0.62338      0.5974     0.51948     0.36364     0.15584    0.025974           0]
    1: [    0.70588     0.70588     0.70588     0.58824     0.58824     0.47059     0.23529     0.11765           0           0]
    2: [       0.75        0.75        0.75        0.75     0.72727     0.63636     0.54545     0.34091     0.15909           0]
    3: [    0.71429     0.71429     0.71429     0.71429     0.66667     0.66667     0.66667     0.57143     0.28571           0]
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0           0]
    5: [    0.65772     0.65772     0.65772      0.6443     0.63087      0.5906     0.49664     0.26846     0.10738           0]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.9128
  F1 @ 75:     0.8739
  F1 @ thresh: [    0.91282     0.91282     0.91282     0.91282     0.90134     0.87386     0.82391      0.6835     0.46703     0.13058]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [     0.9622      0.9622      0.9622      0.9622     0.94158     0.92096     0.85911     0.75601     0.53608     0.18557]
    2: [      0.848       0.848       0.848       0.848       0.848       0.784       0.752        0.48       0.224       0.064]
    4: [    0.85437     0.85437     0.85437     0.85437     0.85437     0.85437     0.81553     0.73786     0.58252    0.058252]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.6667
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8029
R @ 75:     0.7344
R @ thresh: [     0.8029     0.80083     0.79876     0.79253     0.77386     0.73444      0.6639     0.49793     0.30498    0.070539]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.55319     0.53191     0.53191     0.51064     0.48936     0.42553     0.29787     0.12766    0.021277           0]
  1: [    0.93038     0.93038     0.93038     0.92405     0.90506     0.87975     0.81013     0.70253     0.49367     0.17089]
  2: [    0.88136     0.88136     0.87288     0.87288     0.84746     0.77119     0.70339      0.4322     0.19492    0.033898]
  3: [      0.625       0.625       0.625       0.625     0.58333     0.58333     0.58333         0.5        0.25           0]
  4: [    0.85185     0.85185     0.85185     0.85185     0.85185     0.85185     0.81481     0.74074     0.57407    0.055556]
  5: [    0.60494     0.60494     0.60494     0.59259     0.58025     0.54321     0.45679     0.24691    0.098765           0]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6019
  R @ 75:     0.5139
  R @ thresh: [    0.60185     0.59722     0.59722     0.58333     0.56481     0.51389     0.42593     0.25463     0.10185           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.55319     0.53191     0.53191     0.51064     0.48936     0.42553     0.29787     0.12766    0.021277           0]
    1: [    0.54545     0.54545     0.54545     0.45455     0.45455     0.36364     0.18182    0.090909           0           0]
    2: [    0.63462     0.63462     0.63462     0.63462     0.61538     0.53846     0.46154     0.28846     0.13462           0]
    3: [      0.625       0.625       0.625       0.625     0.58333     0.58333     0.58333         0.5        0.25           0]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.60494     0.60494     0.60494     0.59259     0.58025     0.54321     0.45679     0.24691    0.098765           0]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.8977
  R @ 75:     0.8598
  R @ thresh: [    0.89773     0.89773     0.89773     0.89773     0.88636     0.85985     0.81061     0.67424     0.46212     0.12879]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.95238     0.95238     0.95238     0.95238     0.93197     0.91156     0.85034      0.7483     0.53061     0.18367]
    2: [    0.80303     0.80303     0.80303     0.80303     0.80303     0.74242     0.71212     0.45455     0.21212    0.060606]
    4: [    0.86275     0.86275     0.86275     0.86275     0.86275     0.86275     0.82353      0.7451     0.58824    0.058824]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.5000
  R @ thresh: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.8735
P @ 75:     0.7938
P @ thresh: [    0.87346     0.87031     0.86802     0.86043     0.83932     0.79382     0.71303     0.52649     0.31646    0.072896]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.83871     0.80645     0.80645     0.77419     0.74194     0.64516     0.45161     0.19355    0.032258           0]
  1: [    0.96078     0.96078     0.96078     0.95425     0.93464      0.9085      0.8366     0.72549      0.5098     0.17647]
  2: [    0.97196     0.97196     0.96262     0.96262     0.93458     0.85047      0.7757     0.47664     0.21495    0.037383]
  3: [    0.71429     0.71429     0.71429     0.71429     0.66667     0.66667     0.66667     0.57143     0.28571           0]
  4: [    0.80702     0.80702     0.80702     0.80702     0.80702     0.80702     0.77193     0.70175     0.54386    0.052632]
  5: [    0.67123     0.67123     0.67123     0.65753     0.64384     0.60274     0.50685     0.27397     0.10959           0]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8253
  P @ 75:     0.6976
  P @ thresh: [    0.82531     0.81806     0.81806      0.7968     0.77118     0.69764     0.57179       0.339     0.13522           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.86667     0.83333     0.83333         0.8     0.76667     0.66667     0.46667         0.2    0.033333           0]
    1: [          1           1           1     0.83333     0.83333     0.66667     0.33333     0.16667           0           0]
    2: [    0.91667     0.91667     0.91667     0.91667     0.88889     0.77778     0.66667     0.41667     0.19444           0]
    3: [    0.83333     0.83333     0.83333     0.83333     0.77778     0.77778     0.77778     0.66667     0.33333           0]
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0           0]
    5: [    0.72059     0.72059     0.72059     0.70588     0.69118     0.64706     0.54412     0.29412     0.11765           0]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9294
  P @ 75:     0.8892
  P @ thresh: [    0.92939     0.92939     0.92939     0.92939     0.91779     0.88924     0.83853     0.69364     0.47238      0.1325]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.97222     0.97222     0.97222     0.97222     0.95139     0.93056     0.86806     0.76389     0.54167      0.1875]
    2: [    0.89831     0.89831     0.89831     0.89831     0.89831     0.83051     0.79661     0.50847     0.23729    0.067797]
    4: [    0.84615     0.84615     0.84615     0.84615     0.84615     0.84615     0.80769     0.73077     0.57692    0.057692]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     1.0000
  P @ thresh: [          1           1           1           1           1           1           1           1           1           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           1           1           1           1           1           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5113
mAP @ 50:    0.7049
mAP @ 75:    0.6197
mAP scores: [    0.70488     0.69705     0.69494     0.68685     0.66348     0.61967     0.53151     0.34864     0.15858    0.007575]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.51144     0.46441     0.46441     0.43459     0.40572     0.33955     0.18825    0.034388   0.0013716           0]
  1: [    0.91934     0.91934     0.91934     0.90923     0.88398     0.84825     0.75865     0.63161     0.37252    0.041313]
  2: [    0.86045     0.86045     0.84782     0.84782     0.80927     0.69776     0.58544     0.22312    0.043831  0.00091898]
  3: [    0.55086     0.55086     0.55086     0.55086     0.51215     0.51215     0.51215     0.35468    0.075055           0]
  4: [    0.82901     0.82901     0.82901     0.82901     0.82901     0.82901     0.76114     0.65407     0.42448   0.0032179]
  5: [    0.55821     0.55821     0.55821     0.54957     0.54077     0.49131      0.3834     0.19395    0.034216           0]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3545
  mAP @ 50:    0.5303
  mAP @ 75:    0.4264
  mAP scores: [     0.5303     0.52237     0.52237     0.49528     0.47881     0.42639     0.33887     0.20673    0.023469           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.52125     0.47369     0.47369     0.44334     0.41322     0.34538     0.18996    0.034827   0.0013716           0]
    1: [    0.54455     0.54455     0.54455     0.42129     0.42129     0.33543     0.15578     0.09901           0           0]
    2: [    0.57115     0.57115     0.57115     0.57115     0.55091     0.44179     0.36456      0.1379    0.028355           0]
    3: [    0.55664     0.55664     0.55664     0.55664     0.51753     0.51753     0.51753     0.35999    0.076872           0]
    4: [    0.41254     0.41254     0.41254     0.41254     0.41254     0.41254     0.41254     0.41254           0           0]
    5: [    0.57565     0.57565     0.57565     0.56673      0.5574     0.50565     0.39286      0.1961    0.034216           0]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6650
  mAP @ 50:    0.8561
  mAP @ 75:    0.8066
  mAP scores: [    0.85609     0.85609     0.85609     0.85609     0.84751     0.80657     0.73163     0.52635     0.29632    0.017261]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.94843     0.94843     0.94843     0.94843      0.9227     0.89614     0.80598      0.6755     0.40581    0.044187]
    2: [    0.77726     0.77726     0.77726     0.77726     0.77726       0.681     0.61563     0.24627    0.054505   0.0042696]
    4: [    0.84258     0.84258     0.84258     0.84258     0.84258     0.84258     0.77328     0.65729     0.42866   0.0033276]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.4545
  mAP @ 50:    0.5050
  mAP @ 75:    0.5050
  mAP scores: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0]
  
