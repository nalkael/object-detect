========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.7792
F1 @ 75:     0.7077
F1 @ thresh: [    0.77917     0.77578     0.77153     0.75723     0.74171     0.70773     0.64208     0.47083     0.22842     0.03365]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.58537     0.58537     0.56098      0.5122      0.4878      0.4878     0.43902     0.21951    0.073171           0]
  1: [     0.8869     0.88095     0.88095       0.875     0.85714     0.82738     0.79167     0.61905     0.36905    0.071429]
  2: [    0.87805     0.87805     0.87805     0.86992     0.85366     0.81301     0.70732     0.46341     0.17886           0]
  3: [    0.86957     0.86957     0.86957     0.86957     0.86957     0.78261     0.73913     0.73913      0.3913    0.043478]
  4: [    0.64516     0.63226     0.63226     0.63226     0.61935     0.58065     0.54194     0.42581     0.18065     0.03871]
  5: [        0.6         0.6     0.58889     0.55556     0.54444     0.51111     0.41111     0.28889         0.1    0.022222]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6723
  F1 @ 75:     0.5867
  F1 @ thresh: [    0.67228     0.67228      0.6624      0.6382     0.62833      0.5867     0.50304     0.35389     0.12307    0.013707]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [        0.6         0.6       0.575       0.525         0.5         0.5        0.45       0.225       0.075           0]
    1: [    0.45455     0.45455     0.45455     0.45455     0.45455     0.36364     0.27273     0.18182    0.090909           0]
    2: [    0.75728     0.75728     0.75728     0.75728     0.75728     0.69903     0.60194     0.40777     0.07767           0]
    3: [    0.86957     0.86957     0.86957     0.86957     0.86957     0.78261     0.73913     0.73913      0.3913    0.043478]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.63905     0.63905     0.62722     0.59172     0.57988     0.54438     0.43787     0.30769     0.10651    0.023669]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.8807
  F1 @ 75:     0.8355
  F1 @ thresh: [    0.88066     0.87405     0.87405     0.87036     0.85536     0.83552     0.78861     0.59603     0.33285    0.053031]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [     0.9404     0.93377     0.93377     0.92715     0.90728     0.88742      0.8543     0.66887     0.40397     0.07947]
    2: [    0.86614     0.86614     0.86614     0.86614     0.85039     0.85039     0.77165     0.51969     0.26772           0]
    4: [    0.72727     0.71212     0.71212     0.71212     0.71212     0.66667     0.62121     0.48485     0.21212    0.045455]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.0000
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667           0           0           0           0           0           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667           0           0           0           0           0           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8402
R @ 75:     0.7635
R @ thresh: [    0.84025      0.8361     0.83195     0.81743     0.80083     0.76349     0.69295     0.51037     0.24689    0.037344]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.51064     0.51064     0.48936     0.44681     0.42553     0.42553     0.38298     0.19149     0.06383           0]
  1: [    0.94304     0.93671     0.93671     0.93038     0.91139     0.87975     0.84177     0.65823     0.39241    0.075949]
  2: [    0.91525     0.91525     0.91525     0.90678     0.88983     0.84746     0.73729     0.48305     0.18644           0]
  3: [    0.83333     0.83333     0.83333     0.83333     0.83333        0.75     0.70833     0.70833       0.375    0.041667]
  4: [    0.92593     0.90741     0.90741     0.90741     0.88889     0.83333     0.77778     0.61111     0.25926    0.055556]
  5: [    0.66667     0.66667     0.65432     0.61728     0.60494      0.5679     0.45679     0.32099     0.11111    0.024691]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6574
  R @ 75:     0.5741
  R @ thresh: [    0.65741     0.65741     0.64815       0.625     0.61574     0.57407     0.49074     0.34722     0.12037    0.013889]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.51064     0.51064     0.48936     0.44681     0.42553     0.42553     0.38298     0.19149     0.06383           0]
    1: [    0.45455     0.45455     0.45455     0.45455     0.45455     0.36364     0.27273     0.18182    0.090909           0]
    2: [       0.75        0.75        0.75        0.75        0.75     0.69231     0.59615     0.40385    0.076923           0]
    3: [    0.83333     0.83333     0.83333     0.83333     0.83333        0.75     0.70833     0.70833       0.375    0.041667]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.66667     0.66667     0.65432     0.61728     0.60494      0.5679     0.45679     0.32099     0.11111    0.024691]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.9280
  R @ 75:     0.8788
  R @ thresh: [    0.92803     0.92045     0.92045     0.91667     0.90152     0.87879     0.82955     0.62879     0.34848    0.056818]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.96599     0.95918     0.95918     0.95238     0.93197     0.91156     0.87755     0.68707     0.41497    0.081633]
    2: [    0.83333     0.83333     0.83333     0.83333     0.81818     0.81818     0.74242         0.5     0.25758           0]
    4: [    0.94118     0.92157     0.92157     0.92157     0.92157     0.86275     0.80392     0.62745     0.27451    0.058824]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.0000
  R @ thresh: [        0.5         0.5         0.5         0.5           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5           0           0           0           0           0           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.7402
P @ 75:     0.6717
P @ thresh: [    0.74021     0.73726     0.73278     0.71836     0.70342      0.6717     0.60935     0.44483     0.21579    0.031085]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.68571     0.68571     0.65714         0.6     0.57143     0.57143     0.51429     0.25714    0.085714           0]
  1: [    0.83708     0.83146     0.83146     0.82584     0.80899      0.7809     0.74719     0.58427     0.34831    0.067416]
  2: [    0.84375     0.84375     0.84375     0.83594     0.82031     0.78125     0.67969     0.44531     0.17188           0]
  3: [    0.90909     0.90909     0.90909     0.90909     0.90909     0.81818     0.77273     0.77273     0.40909    0.045455]
  4: [    0.49505     0.48515     0.48515     0.48515     0.47525     0.44554     0.41584     0.32673     0.13861    0.029703]
  5: [    0.54545     0.54545     0.53535     0.50505     0.49495     0.46465     0.37374     0.26263    0.090909    0.020202]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.6966
  P @ 75:     0.6073
  P @ thresh: [    0.69662     0.69662     0.68576     0.65979     0.64894     0.60726     0.52244     0.36439      0.1271    0.013573]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.72727     0.72727     0.69697     0.63636     0.60606     0.60606     0.54545     0.27273    0.090909           0]
    1: [    0.45455     0.45455     0.45455     0.45455     0.45455     0.36364     0.27273     0.18182    0.090909           0]
    2: [    0.76471     0.76471     0.76471     0.76471     0.76471     0.70588     0.60784     0.41176    0.078431           0]
    3: [    0.90909     0.90909     0.90909     0.90909     0.90909     0.81818     0.77273     0.77273     0.40909    0.045455]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.61364     0.61364     0.60227     0.56818     0.55682     0.52273     0.42045     0.29545     0.10227    0.022727]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8500
  P @ 75:     0.8076
  P @ thresh: [    0.85001     0.84403     0.84403     0.84044     0.82556     0.80763     0.76202     0.57439      0.3222    0.050263]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.91613     0.90968     0.90968     0.90323     0.88387     0.86452     0.83226     0.65161     0.39355    0.077419]
    2: [    0.90164     0.90164     0.90164     0.90164     0.88525     0.88525     0.80328     0.54098     0.27869           0]
    4: [    0.59259     0.58025     0.58025     0.58025     0.58025     0.54321     0.50617     0.39506     0.17284    0.037037]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     0.0000
  P @ thresh: [          1           1           1           1           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           0           0           0           0           0           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5310
mAP @ 50:    0.7485
mAP @ 75:    0.6453
mAP scores: [    0.74848     0.74432     0.72981     0.71624     0.69931     0.64527     0.56314     0.36919    0.090657   0.0040661]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.47684     0.47684       0.434      0.4032     0.38891     0.38891     0.32846    0.082526     0.01056           0]
  1: [    0.93536     0.92683     0.92683     0.91755     0.89433     0.82564     0.76936     0.49059     0.21034     0.01907]
  2: [    0.90005     0.90005     0.90005     0.88939     0.86649     0.82353     0.68376      0.3808    0.051797           0]
  3: [    0.79362     0.79362     0.79362     0.79362     0.79362     0.70361     0.65216     0.65216     0.14997    0.002003]
  4: [    0.82317     0.80668      0.7693     0.76828      0.7452     0.66038     0.61549     0.45608     0.10404   0.0021115]
  5: [    0.56187     0.56187     0.55506     0.52541     0.50731     0.46952     0.32958     0.15299    0.017231   0.0012117]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3557
  mAP @ 50:    0.5100
  mAP @ 75:    0.4373
  mAP scores: [    0.50997     0.50997      0.5015     0.49081     0.48532     0.43735     0.34833     0.22404    0.049043  0.00054126]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.47834     0.47834     0.43496      0.4032     0.38891     0.38891     0.32846    0.082526     0.01056           0]
    1: [    0.45545     0.45545     0.45545     0.45545     0.45545     0.36634     0.22119     0.14074     0.09901           0]
    2: [     0.7462      0.7462      0.7462      0.7462      0.7462     0.67851     0.55066     0.31079    0.016676           0]
    3: [    0.79362     0.79362     0.79362     0.79362     0.79362     0.70361     0.65216     0.65216     0.14997    0.002003]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.58623     0.58623     0.57875     0.54637     0.52775     0.48673     0.33751     0.15803    0.018043   0.0012446]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6386
  mAP @ 50:    0.8729
  mAP @ 75:    0.7828
  mAP scores: [    0.87287       0.864     0.85108     0.84751     0.83175     0.78277     0.71754     0.46989     0.14099   0.0075251]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.95729     0.94804     0.94804     0.93892     0.91521     0.86335     0.80327     0.51777     0.22275    0.020333]
    2: [    0.81536     0.81536     0.81536     0.81536      0.7918      0.7918     0.70394     0.42485    0.089818           0]
    4: [    0.84597      0.8286     0.78984     0.78824     0.78824     0.69316     0.64541     0.46705     0.11039   0.0022418]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.2020
  mAP @ 50:    0.5050
  mAP @ 75:    0.0000
  mAP scores: [    0.50495     0.50495     0.50495     0.50495           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495           0           0           0           0           0           0]
  
