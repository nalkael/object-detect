========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.7794
F1 @ 75:     0.6852
F1 @ thresh: [    0.77937     0.77594     0.77107     0.75268     0.73036     0.68521      0.5989     0.44535      0.2057    0.036232]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.60606     0.58586     0.58586     0.54545     0.52525     0.48485     0.38384     0.22222     0.10101           0]
  1: [    0.90149     0.90149     0.90149     0.88955     0.87761     0.81194      0.7403     0.60299     0.35224    0.065672]
  2: [    0.87302     0.87302     0.86508     0.84921     0.80159      0.7619     0.65079     0.43651     0.12698    0.015873]
  3: [    0.77551     0.77551     0.77551     0.77551     0.77551     0.77551     0.73469     0.65306      0.2449    0.040816]
  4: [    0.62745     0.61438     0.58824     0.56209     0.53595     0.49673     0.48366     0.39216     0.24837    0.078431]
  5: [    0.60773     0.60773     0.60773     0.58564     0.57459     0.54144     0.40884     0.25414    0.055249           0]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6878
  F1 @ 75:     0.6126
  F1 @ thresh: [    0.68779     0.68306     0.68306     0.65966     0.64043     0.61256     0.49857     0.32663    0.099419   0.0047281]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.65217     0.63043     0.63043     0.58696     0.56522     0.52174     0.41304     0.23913      0.1087           0]
    1: [    0.58824     0.58824     0.58824     0.58824     0.58824     0.58824     0.35294     0.11765           0           0]
    2: [       0.75        0.75        0.75     0.72917      0.6875     0.66667     0.58333       0.375     0.10417           0]
    3: [    0.80851     0.80851     0.80851     0.80851     0.80851     0.80851     0.76596     0.68085     0.25532    0.042553]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.65476     0.65476     0.65476     0.63095     0.61905     0.58333     0.44048     0.27381    0.059524           0]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.8646
  F1 @ 75:     0.7682
  F1 @ thresh: [    0.86459     0.86157     0.85856     0.84891     0.82439     0.76817     0.71392     0.57576     0.30758    0.065274]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.93204     0.93204     0.93204     0.92557     0.91262     0.84142     0.78317     0.64725     0.38188    0.071197]
    2: [    0.82707     0.82707     0.82707     0.82707     0.78195     0.75188     0.67669     0.51128     0.15038    0.030075]
    4: [    0.71875     0.70312      0.6875     0.65625       0.625     0.57812      0.5625     0.45312     0.29688     0.09375]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.6667
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667           0           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8568
R @ 75:     0.7510
R @ thresh: [    0.85685      0.8527     0.84647     0.82573     0.80083     0.75104     0.65768     0.48963     0.22822    0.041494]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [     0.6383     0.61702     0.61702     0.57447     0.55319     0.51064     0.40426     0.23404     0.10638           0]
  1: [     0.9557      0.9557      0.9557     0.94304     0.93038     0.86076     0.78481     0.63924     0.37342     0.06962]
  2: [     0.9322      0.9322     0.92373     0.90678     0.85593     0.81356     0.69492      0.4661     0.13559    0.016949]
  3: [    0.79167     0.79167     0.79167     0.79167     0.79167     0.79167        0.75     0.66667        0.25    0.041667]
  4: [    0.88889     0.87037     0.83333      0.7963     0.75926      0.7037     0.68519     0.55556     0.35185     0.11111]
  5: [    0.67901     0.67901     0.67901     0.65432     0.64198     0.60494     0.45679     0.28395    0.061728           0]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6713
  R @ 75:     0.5972
  R @ thresh: [     0.6713     0.66667     0.66667     0.64352       0.625     0.59722     0.48611     0.31944    0.097222   0.0046296]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [     0.6383     0.61702     0.61702     0.57447     0.55319     0.51064     0.40426     0.23404     0.10638           0]
    1: [    0.45455     0.45455     0.45455     0.45455     0.45455     0.45455     0.27273    0.090909           0           0]
    2: [    0.69231     0.69231     0.69231     0.67308     0.63462     0.61538     0.53846     0.34615    0.096154           0]
    3: [    0.79167     0.79167     0.79167     0.79167     0.79167     0.79167        0.75     0.66667        0.25    0.041667]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.67901     0.67901     0.67901     0.65432     0.64198     0.60494     0.45679     0.28395    0.061728           0]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.9280
  R @ 75:     0.8220
  R @ thresh: [    0.92803     0.92424     0.92045     0.90909     0.88258     0.82197     0.76515     0.61742     0.33333     0.07197]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.97959     0.97959     0.97959     0.97279     0.95918     0.88435     0.82313     0.68027     0.40136     0.07483]
    2: [    0.83333     0.83333     0.83333     0.83333     0.78788     0.75758     0.68182     0.51515     0.15152    0.030303]
    4: [    0.90196     0.88235     0.86275     0.82353     0.78431     0.72549     0.70588     0.56863     0.37255     0.11765]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.5000
  R @ thresh: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5           0           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.7215
P @ 75:     0.6355
P @ thresh: [    0.72146     0.71845     0.71436     0.69763     0.67715     0.63545     0.55499     0.41263     0.18973    0.032807]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.57692     0.55769     0.55769     0.51923         0.5     0.46154     0.36538     0.21154    0.096154           0]
  1: [    0.85311     0.85311     0.85311     0.84181     0.83051     0.76836     0.70056     0.57062     0.33333    0.062147]
  2: [     0.8209      0.8209     0.81343     0.79851     0.75373     0.71642     0.61194     0.41045      0.1194    0.014925]
  3: [       0.76        0.76        0.76        0.76        0.76        0.76        0.72        0.64        0.24        0.04]
  4: [    0.48485     0.47475     0.45455     0.43434     0.41414     0.38384     0.37374     0.30303     0.19192    0.060606]
  5: [       0.55        0.55        0.55        0.53        0.52        0.49        0.37        0.23        0.05           0]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.7133
  P @ 75:     0.6366
  P @ thresh: [    0.71333     0.70849     0.70849     0.68473     0.66464     0.63657     0.51697     0.33659     0.10207   0.0048309]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.66667     0.64444     0.64444         0.6     0.57778     0.53333     0.42222     0.24444     0.11111           0]
    1: [    0.83333     0.83333     0.83333     0.83333     0.83333     0.83333         0.5     0.16667           0           0]
    2: [    0.81818     0.81818     0.81818     0.79545        0.75     0.72727     0.63636     0.40909     0.11364           0]
    3: [    0.82609     0.82609     0.82609     0.82609     0.82609     0.82609     0.78261     0.69565     0.26087    0.043478]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.63218     0.63218     0.63218      0.6092      0.5977     0.56322     0.42529     0.26437    0.057471           0]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8156
  P @ 75:     0.7262
  P @ thresh: [    0.81558     0.81307     0.81056     0.80211     0.77902     0.72622     0.67412     0.54334     0.28777    0.060324]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.88889     0.88889     0.88889     0.88272     0.87037     0.80247     0.74691     0.61728      0.3642    0.067901]
    2: [     0.8209      0.8209      0.8209      0.8209     0.77612     0.74627     0.67164     0.50746     0.14925    0.029851]
    4: [     0.5974     0.58442     0.57143     0.54545     0.51948     0.48052     0.46753     0.37662     0.24675    0.077922]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     1.0000
  P @ thresh: [          1           1           1           1           1           1           1           1           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           1           1           1           1           0           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5254
mAP @ 50:    0.7682
mAP @ 75:    0.6321
mAP scores: [    0.76822     0.76258     0.75156     0.72828     0.69839     0.63207     0.49823     0.31587    0.091482   0.0074314]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [    0.59203     0.57389     0.57389     0.52475     0.50723     0.38912     0.27449    0.094079    0.017583           0]
  1: [    0.94454     0.94454     0.94454     0.93537      0.9116     0.80968     0.68324     0.47634     0.19024    0.015781]
  2: [    0.92278     0.92278     0.91144      0.8895     0.83905      0.7772     0.58081       0.314    0.027084   0.0003667]
  3: [    0.76262     0.76262     0.76262     0.76262     0.76262     0.76262      0.6709     0.53804     0.13253   0.0014259]
  4: [    0.79715     0.78148     0.72669     0.68379     0.60453     0.53521     0.51342     0.35595     0.17466    0.027015]
  5: [    0.59019     0.59019     0.59019     0.57365     0.56533      0.5186     0.26654     0.11681   0.0068014           0]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3542
  mAP @ 50:    0.5200
  mAP @ 75:    0.4599
  mAP scores: [    0.51998     0.51684     0.51684     0.50228     0.49083     0.45991     0.32321     0.18013     0.03149  0.00023765]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.59699     0.57818     0.57818     0.52731     0.50914     0.39154     0.27449    0.094079    0.017583           0]
    1: [    0.45545     0.45545     0.45545     0.45545     0.45545     0.45545     0.20748    0.014301           0           0]
    2: [    0.68589     0.68589     0.68589     0.66762     0.62612     0.60894     0.50615     0.31231    0.031794           0]
    3: [    0.76262     0.76262     0.76262     0.76262     0.76262     0.76262      0.6709     0.53804     0.13253   0.0014259]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.61893     0.61893     0.61893     0.60067     0.59166     0.54088     0.28023     0.12207   0.0070286           0]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6121
  mAP @ 50:    0.8719
  mAP @ 75:    0.7067
  mAP scores: [    0.87194     0.86455     0.85299      0.8372     0.78211     0.70671     0.62147     0.42471     0.14333    0.016216]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.96688     0.96688     0.96688     0.96629     0.93324     0.82893      0.7266     0.52935     0.21381    0.016875]
    2: [    0.81569     0.81569     0.81569     0.81569     0.76792     0.72471     0.59309     0.37178     0.02923   0.0047574]
    4: [    0.83326     0.81108      0.7764     0.72961     0.64519     0.56647     0.54473     0.37302     0.18693    0.027015]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.4040
  mAP @ 50:    0.5050
  mAP @ 75:    0.5050
  mAP scores: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495           0           0]
  
