========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.8681
F1 @ 75:     0.8123
F1 @ thresh: [    0.86815     0.86815     0.86354     0.85022     0.84185     0.81229     0.74996     0.62027     0.40016      0.1259]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.64103     0.64103     0.61538     0.58974     0.58974     0.58974     0.53846     0.41026     0.15385    0.025641]
  1: [    0.95208     0.95208     0.95208     0.95208     0.94569     0.92013      0.8754     0.80511     0.58786     0.20447]
  2: [    0.94828     0.94828     0.93966     0.92241     0.90517     0.85345     0.74138     0.51724     0.26724    0.043103]
  3: [    0.84444     0.84444     0.84444     0.84444     0.84444         0.8         0.8     0.75556     0.44444    0.088889]
  4: [    0.89908     0.89908     0.89908     0.89908     0.88073     0.84404     0.82569     0.78899      0.6422     0.33028]
  5: [    0.70588     0.70588     0.70588     0.66667     0.66667     0.65359     0.57516     0.37908     0.19608    0.026144]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.7259
  F1 @ 75:     0.6738
  F1 @ thresh: [    0.72591     0.72591     0.72025      0.6998     0.69451     0.67382     0.62253      0.4518     0.23308    0.041531]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [    0.64935     0.64935     0.62338      0.5974      0.5974      0.5974     0.54545     0.41558     0.15584    0.025974]
    1: [        0.8         0.8         0.8         0.8         0.8         0.8         0.7         0.6         0.3         0.1]
    2: [    0.72527     0.72527     0.72527     0.72527      0.7033     0.65934     0.63736      0.3956     0.24176    0.043956]
    3: [    0.88372     0.88372     0.88372     0.88372     0.88372     0.83721     0.83721      0.7907     0.46512    0.093023]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.71053     0.71053     0.71053     0.67105     0.67105     0.65789     0.57895     0.38158     0.19737    0.026316]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.9274
  F1 @ 75:     0.8930
  F1 @ thresh: [    0.92744     0.92744     0.92744     0.92744     0.91985     0.89295     0.83793     0.75574     0.54189     0.19491]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.97241     0.97241     0.97241     0.97241     0.96552     0.93793     0.89655     0.82759     0.61379     0.21379]
    2: [    0.83871     0.83871     0.83871     0.83871     0.83871     0.82258     0.70968     0.56452     0.29032    0.048387]
    4: [    0.91262     0.91262     0.91262     0.91262      0.8932     0.85437     0.83495     0.79612     0.66019      0.3301]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.6667
  F1 @ 75:     0.6667
  F1 @ thresh: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [    0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667     0.66667]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8423
R @ 75:     0.7884
R @ thresh: [    0.84232     0.84232     0.83817     0.82573     0.81743     0.78838     0.72822     0.60373     0.39212     0.12448]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.53191     0.53191     0.51064     0.48936     0.48936     0.48936     0.44681     0.34043     0.12766    0.021277]
  1: [    0.94304     0.94304     0.94304     0.94304     0.93671     0.91139     0.86709     0.79747     0.58228     0.20253]
  2: [     0.9322      0.9322     0.92373     0.90678     0.88983     0.83898     0.72881     0.50847     0.26271    0.042373]
  3: [    0.79167     0.79167     0.79167     0.79167     0.79167        0.75        0.75     0.70833     0.41667    0.083333]
  4: [    0.90741     0.90741     0.90741     0.90741     0.88889     0.85185     0.83333      0.7963     0.64815     0.33333]
  5: [    0.66667     0.66667     0.66667     0.62963     0.62963     0.61728     0.54321     0.35802     0.18519    0.024691]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6481
  R @ 75:     0.6019
  R @ thresh: [    0.64815     0.64815     0.64352       0.625     0.62037     0.60185     0.55556     0.40278     0.20833    0.037037]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.53191     0.53191     0.51064     0.48936     0.48936     0.48936     0.44681     0.34043     0.12766    0.021277]
    1: [    0.72727     0.72727     0.72727     0.72727     0.72727     0.72727     0.63636     0.54545     0.27273    0.090909]
    2: [    0.63462     0.63462     0.63462     0.63462     0.61538     0.57692     0.55769     0.34615     0.21154    0.038462]
    3: [    0.79167     0.79167     0.79167     0.79167     0.79167        0.75        0.75     0.70833     0.41667    0.083333]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.66667     0.66667     0.66667     0.62963     0.62963     0.61728     0.54321     0.35802     0.18519    0.024691]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.9091
  R @ 75:     0.8750
  R @ thresh: [    0.90909     0.90909     0.90909     0.90909     0.90152       0.875     0.82197     0.74242     0.53409     0.19318]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.95918     0.95918     0.95918     0.95918     0.95238     0.92517     0.88435     0.81633     0.60544     0.21088]
    2: [    0.78788     0.78788     0.78788     0.78788     0.78788     0.77273     0.66667      0.5303     0.27273    0.045455]
    4: [    0.92157     0.92157     0.92157     0.92157     0.90196     0.86275     0.84314     0.80392     0.66667     0.33333]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.5000
  R @ 75:     0.5000
  R @ thresh: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [        0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5         0.5]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.9009
P @ 75:     0.8426
P @ thresh: [    0.90087     0.90087     0.89558     0.88114     0.87269     0.84257     0.77751     0.64123     0.41003     0.12763]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.80645     0.80645     0.77419     0.74194     0.74194     0.74194     0.67742     0.51613     0.19355    0.032258]
  1: [    0.96129     0.96129     0.96129     0.96129     0.95484     0.92903     0.88387      0.8129     0.59355     0.20645]
  2: [    0.96491     0.96491     0.95614      0.9386     0.92105     0.86842     0.75439     0.52632     0.27193     0.04386]
  3: [    0.90476     0.90476     0.90476     0.90476     0.90476     0.85714     0.85714     0.80952     0.47619    0.095238]
  4: [    0.89091     0.89091     0.89091     0.89091     0.87273     0.83636     0.81818     0.78182     0.63636     0.32727]
  5: [       0.75        0.75        0.75     0.70833     0.70833     0.69444     0.61111     0.40278     0.20833    0.027778]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8313
  P @ 75:     0.7713
  P @ thresh: [    0.83125     0.83125       0.824      0.8009     0.79473     0.77125     0.71322     0.51832      0.2661    0.047516]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.83333     0.83333         0.8     0.76667     0.76667     0.76667         0.7     0.53333         0.2    0.033333]
    1: [    0.88889     0.88889     0.88889     0.88889     0.88889     0.88889     0.77778     0.66667     0.33333     0.11111]
    2: [    0.84615     0.84615     0.84615     0.84615     0.82051     0.76923     0.74359     0.46154     0.28205    0.051282]
    3: [          1           1           1           1           1     0.94737     0.94737     0.89474     0.52632     0.10526]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.76056     0.76056     0.76056     0.71831     0.71831     0.70423     0.61972     0.40845     0.21127    0.028169]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9478
  P @ 75:     0.9129
  P @ thresh: [    0.94778     0.94778     0.94778     0.94778     0.94017     0.91285      0.8556     0.77044     0.55045      0.1968]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.98601     0.98601     0.98601     0.98601     0.97902     0.95105     0.90909     0.83916     0.62238     0.21678]
    2: [    0.89655     0.89655     0.89655     0.89655     0.89655     0.87931     0.75862     0.60345     0.31034    0.051724]
    4: [    0.90385     0.90385     0.90385     0.90385     0.88462     0.84615     0.82692     0.78846     0.65385     0.32692]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     1.0000
  P @ 75:     1.0000
  P @ thresh: [          1           1           1           1           1           1           1           1           1           1]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          1           1           1           1           1           1           1           1           1           1]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5882
mAP @ 50:    0.7691
mAP @ 75:    0.6979
mAP scores: [    0.76909     0.76909     0.76393     0.74659     0.73615     0.69795     0.63406     0.48668     0.24132    0.036835]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [     0.4775      0.4775     0.45715     0.41663     0.41663     0.41663     0.33753     0.22202    0.058183   0.0007887]
  1: [    0.93834     0.93834     0.93834     0.93834     0.92248      0.8818     0.81867     0.73241     0.47406    0.096794]
  2: [    0.92519     0.92519     0.91455     0.89072     0.86658     0.79543     0.66488     0.39452     0.11245   0.0026698]
  3: [    0.78744     0.78744     0.78744     0.78744     0.78744     0.70816     0.70816     0.64164     0.21842    0.021531]
  4: [    0.86378     0.86378     0.86378     0.86378     0.84116     0.81124     0.79271     0.72258     0.51048    0.098501]
  5: [     0.6223      0.6223      0.6223     0.58263     0.58263     0.57441      0.4824      0.2069    0.074342  0.00072607]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.5359
  mAP @ 50:    0.7052
  mAP @ 75:    0.6606
  mAP scores: [    0.70523     0.70523     0.70183     0.68834     0.68555     0.66056     0.60622     0.47427      0.1109    0.020683]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.47886     0.47886     0.45845     0.41762     0.41762     0.41762     0.33843     0.22288    0.058316   0.0007887]
    1: [    0.72277     0.72277     0.72277     0.72277     0.72277     0.72277     0.59339     0.51583     0.18349     0.09901]
    2: [    0.61227     0.61227     0.61227     0.61227     0.59553     0.53349     0.50868     0.25385     0.12852   0.0020395]
    3: [    0.79208     0.79208     0.79208     0.79208     0.79208     0.71253     0.71253      0.6453      0.2205    0.021531]
    4: [          1           1           1           1           1           1           1           1           0           0]
    5: [    0.62541     0.62541     0.62541     0.58527     0.58527     0.57692      0.4843     0.20778     0.07457  0.00073167]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6963
  mAP @ 50:    0.8624
  mAP @ 75:    0.8179
  mAP scores: [    0.86239     0.86239     0.86239     0.86239     0.85276     0.81791      0.7547     0.64034     0.38062    0.067592]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.95035     0.95035     0.95035     0.95035     0.94415     0.89283     0.83928     0.75316     0.49466     0.10345]
    2: [    0.75472     0.75472     0.75472     0.75472     0.75472     0.73978     0.62181     0.43659     0.12365   0.0039475]
    4: [     0.8821      0.8821      0.8821      0.8821     0.85941     0.82111       0.803     0.73127     0.52355    0.095381]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.5050
  mAP @ 50:    0.5050
  mAP @ 75:    0.5050
  mAP scores: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [    0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495     0.50495]
  
