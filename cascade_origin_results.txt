========== Evaluation Results ==========
F1ScoreResult:
Metric target: MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
F1 @ 50:     0.8607
F1 @ 75:     0.7999
F1 @ thresh: [    0.86066     0.85658     0.85423     0.84568     0.82191     0.79988     0.72468        0.62     0.37856    0.097021]
IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
F1 per class:
  0: [    0.74699     0.74699     0.72289     0.72289      0.6988      0.6506     0.53012     0.45783     0.14458    0.024096]
  1: [    0.95114     0.94463     0.94463     0.94463     0.91857     0.88599     0.82736     0.76873     0.58632     0.22801]
  2: [    0.91556     0.91556     0.91556     0.89778     0.87111     0.86222     0.78222     0.61333     0.25778   0.0088889]
  3: [    0.91304     0.91304     0.91304     0.91304     0.86957     0.86957     0.86957     0.78261     0.47826    0.043478]
  4: [    0.78261     0.76522     0.76522     0.74783     0.73043     0.73043     0.73043     0.67826     0.52174     0.13913]
  5: [    0.70667     0.70667     0.70667     0.69333        0.68     0.65333     0.50667     0.34667        0.16           0]

Small objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.7515
  F1 @ 75:     0.6874
  F1 @ thresh: [    0.75145     0.75145     0.74615     0.73537     0.71445     0.68735     0.58607     0.45236     0.20418    0.022121]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    0: [     0.7561      0.7561     0.73171     0.73171     0.70732     0.65854     0.53659     0.46341     0.14634     0.02439]
    1: [    0.70588     0.70588     0.70588     0.70588     0.70588     0.58824     0.47059     0.23529     0.23529     0.23529]
    2: [    0.71264     0.71264     0.71264     0.68966     0.66667     0.66667     0.62069     0.48276     0.18391           0]
    3: [    0.91304     0.91304     0.91304     0.91304     0.86957     0.86957     0.86957     0.78261     0.47826    0.043478]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.74126     0.74126     0.74126     0.72727     0.71329     0.68531     0.53147     0.36364     0.16783           0]
  
Medium objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.9142
  F1 @ 75:     0.8687
  F1 @ thresh: [    0.91421     0.90676     0.90676     0.90318     0.88414     0.86867     0.81741      0.7349     0.52126     0.15671]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    1: [    0.97222     0.96528     0.96528     0.96528      0.9375     0.90972     0.85417     0.80556     0.61111     0.22917]
    2: [    0.86179     0.86179     0.86179     0.86179     0.86179     0.86179     0.78049     0.60163     0.30894     0.01626]
    4: [    0.81481      0.7963      0.7963     0.77778     0.75926     0.75926     0.75926      0.7037     0.53704     0.12963]
  
Large objects:
  F1ScoreResult:
  Metric target: MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  F1 @ 50:     0.0000
  F1 @ 75:     0.0000
  F1 @ thresh: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh:  [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  F1 per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
RecallResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
R @ 50:     0.8278
R @ 75:     0.7697
R @ thresh: [     0.8278     0.82365     0.82158     0.81328     0.79046     0.76971     0.69917     0.59959     0.36929    0.095436]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Recall per class:
  0: [    0.65957     0.65957      0.6383      0.6383     0.61702     0.57447     0.46809     0.40426     0.12766    0.021277]
  1: [    0.92405     0.91772     0.91772     0.91772     0.89241     0.86076      0.8038     0.74684     0.56962     0.22152]
  2: [    0.87288     0.87288     0.87288     0.85593     0.83051     0.82203     0.74576     0.58475     0.24576   0.0084746]
  3: [      0.875       0.875       0.875       0.875     0.83333     0.83333     0.83333        0.75     0.45833    0.041667]
  4: [    0.83333     0.81481     0.81481      0.7963     0.77778     0.77778     0.77778     0.72222     0.55556     0.14815]
  5: [    0.65432     0.65432     0.65432     0.64198     0.62963     0.60494     0.46914     0.32099     0.14815           0]

Small objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.6574
  R @ 75:     0.6019
  R @ thresh: [    0.65741     0.65741     0.65278     0.64352       0.625     0.60185     0.51389     0.39815     0.18056    0.018519]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    0: [    0.65957     0.65957      0.6383      0.6383     0.61702     0.57447     0.46809     0.40426     0.12766    0.021277]
    1: [    0.54545     0.54545     0.54545     0.54545     0.54545     0.45455     0.36364     0.18182     0.18182     0.18182]
    2: [    0.59615     0.59615     0.59615     0.57692     0.55769     0.55769     0.51923     0.40385     0.15385           0]
    3: [      0.875       0.875       0.875       0.875     0.83333     0.83333     0.83333        0.75     0.45833    0.041667]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.65432     0.65432     0.65432     0.64198     0.62963     0.60494     0.46914     0.32099     0.14815           0]
  
Medium objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.8977
  R @ 75:     0.8523
  R @ thresh: [    0.89773     0.89015     0.89015     0.88636     0.86742     0.85227     0.80303     0.72348     0.51515      0.1553]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    1: [    0.95238     0.94558     0.94558     0.94558     0.91837     0.89116     0.83673     0.78912     0.59864     0.22449]
    2: [    0.80303     0.80303     0.80303     0.80303     0.80303     0.80303     0.72727     0.56061     0.28788    0.015152]
    4: [    0.86275     0.84314     0.84314     0.82353     0.80392     0.80392     0.80392      0.7451     0.56863     0.13725]
  
Large objects:
  RecallResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  R @ 50:     0.0000
  R @ 75:     0.0000
  R @ thresh: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Recall per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
PrecisionResult:
Metric target:    MetricTarget.BOXES
Averaging method: AveragingMethod.WEIGHTED
P @ 50:     0.9001
P @ 75:     0.8360
P @ thresh: [    0.90009     0.89605     0.89334     0.88449     0.85959     0.83601     0.75528     0.64462     0.38982    0.098953]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
Precision per class:
  0: [    0.86111     0.86111     0.83333     0.83333     0.80556        0.75     0.61111     0.52778     0.16667    0.027778]
  1: [    0.97987     0.97315     0.97315     0.97315     0.94631     0.91275     0.85235     0.79195     0.60403      0.2349]
  2: [    0.96262     0.96262     0.96262     0.94393     0.91589     0.90654     0.82243     0.64486     0.27103   0.0093458]
  3: [    0.95455     0.95455     0.95455     0.95455     0.90909     0.90909     0.90909     0.81818         0.5    0.045455]
  4: [     0.7377     0.72131     0.72131     0.70492     0.68852     0.68852     0.68852     0.63934      0.4918     0.13115]
  5: [    0.76812     0.76812     0.76812     0.75362     0.73913     0.71014     0.55072     0.37681     0.17391           0]

Small objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.8835
  P @ 75:     0.8071
  P @ thresh: [     0.8835      0.8835     0.87729     0.86436     0.84017     0.80715     0.68729     0.52771     0.23744    0.028243]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    0: [    0.88571     0.88571     0.85714     0.85714     0.82857     0.77143     0.62857     0.54286     0.17143    0.028571]
    1: [          1           1           1           1           1     0.83333     0.66667     0.33333     0.33333     0.33333]
    2: [    0.88571     0.88571     0.88571     0.85714     0.82857     0.82857     0.77143         0.6     0.22857           0]
    3: [    0.95455     0.95455     0.95455     0.95455     0.90909     0.90909     0.90909     0.81818         0.5    0.045455]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.85484     0.85484     0.85484     0.83871     0.82258     0.79032      0.6129     0.41935     0.19355           0]
  
Medium objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.9344
  P @ 75:     0.8887
  P @ thresh: [    0.93445     0.92711     0.92711     0.92372     0.90454     0.88874     0.83522     0.74916     0.52914     0.15843]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    1: [    0.99291     0.98582     0.98582     0.98582     0.95745     0.92908     0.87234      0.8227     0.62411     0.23404]
    2: [    0.92982     0.92982     0.92982     0.92982     0.92982     0.92982     0.84211     0.64912     0.33333    0.017544]
    4: [    0.77193     0.75439     0.75439     0.73684      0.7193      0.7193      0.7193     0.66667     0.50877     0.12281]
  
Large objects:
  PrecisionResult:
  Metric target:    MetricTarget.BOXES
  Averaging method: AveragingMethod.WEIGHTED
  P @ 50:     0.0000
  P @ 75:     0.0000
  P @ thresh: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  Precision per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
MeanAveragePrecisionResult:
Metric target: MetricTarget.BOXES
Class agnostic: False
mAP @ 50:95: 0.5729
mAP @ 50:    0.7711
mAP @ 75:    0.6903
mAP scores: [     0.7711     0.76277      0.7527     0.74226      0.7129     0.69032     0.59721     0.46386     0.21102    0.025262]
IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
AP per class:
  0: [     0.6303      0.6303     0.56987     0.56987     0.55243     0.49241     0.37111     0.27134    0.019149   0.0010739]
  1: [     0.9169     0.90544     0.90544     0.90544     0.86518     0.83201     0.74812     0.67802     0.41821    0.073452]
  2: [    0.86625     0.86625     0.86625     0.83598       0.809     0.79922     0.68134     0.42782    0.059133           0]
  3: [    0.86069     0.86069     0.86069     0.86069     0.80802     0.80802     0.80802      0.6845      0.3684    0.049505]
  4: [    0.77903     0.74053     0.74053     0.71682     0.69686     0.69686     0.69686     0.57889     0.37212    0.027543]
  5: [    0.57343     0.57343     0.57343     0.56477     0.54591      0.5134     0.27781     0.14259    0.029096           0]

Small objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.3857
  mAP @ 50:    0.5422
  mAP @ 75:    0.4715
  mAP scores: [    0.54222     0.54222     0.53209     0.52723     0.50799     0.47149     0.38321     0.24787    0.085449    0.017051]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    0: [    0.63803     0.63803     0.57727     0.57727      0.5593     0.49865     0.37481      0.2744     0.01945   0.0010739]
    1: [    0.54455     0.54455     0.54455     0.54455     0.54455     0.42129     0.33543    0.051725    0.051725    0.051725]
    2: [    0.58907     0.58907     0.58907     0.56935      0.5452      0.5452     0.47704     0.32077    0.041233           0]
    3: [    0.86069     0.86069     0.86069     0.86069     0.80802     0.80802     0.80802      0.6845      0.3684    0.049505]
    4: [          0           0           0           0           0           0           0           0           0           0]
    5: [    0.62098     0.62098     0.62098     0.61152     0.59089     0.55575     0.30395     0.15583    0.031886           0]
  
Medium objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.6509
  mAP @ 50:    0.8425
  mAP @ 75:    0.7859
  mAP scores: [    0.84252     0.82572     0.82572     0.81737     0.79372     0.78594     0.71909     0.56456     0.30085    0.033284]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    1: [    0.94983     0.93835     0.93835     0.93835     0.88754      0.8642     0.77928     0.71804     0.44281    0.075037]
    2: [    0.76944     0.76944     0.76944     0.76944     0.76944     0.76944      0.6538     0.38024    0.081742  0.00021066]
    4: [    0.80827     0.76937     0.76937     0.74433     0.72418     0.72418     0.72418      0.5954     0.37801    0.024605]
  
Large objects:
  MeanAveragePrecisionResult:
  Metric target: MetricTarget.BOXES
  Class agnostic: False
  mAP @ 50:95: 0.0000
  mAP @ 50:    0.0000
  mAP @ 75:    0.0000
  mAP scores: [          0           0           0           0           0           0           0           0           0           0]
  IoU thresh: [        0.5        0.55         0.6        0.65         0.7        0.75         0.8        0.85         0.9        0.95]
  AP per class:
    4: [          0           0           0           0           0           0           0           0           0           0]
  
